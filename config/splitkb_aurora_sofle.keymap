/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#define ZMK_MOUSE_SCRL_VAL 140

/ {
    behaviors {
        mkp_encoder: mkp_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&mkp MB4>, <&mkp MB5>;
            tap-ms = <20>;
        };

        // See https://github.com/zmkfirmware/zmk/issues/72
        mouse_scroll: mouse_scroll {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <2>;
            bindings = <&mwh>, <&mwh>;
            tap-ms = <20>;
        }
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  SHIFT|  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// |  CTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | GUI(L)|  N   |  M    |  ,    |  .   |   /   |   \   |
//               |GUI | ALT  | CTRL  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  |  RALT | GUI |
            bindings = <
&kp ESC   &kp N1 &kp N2    &kp N3   &kp N4   &kp N5                      &kp N6 &kp N7   &kp N8    &kp N9   &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W     &kp E    &kp R    &kp T                       &kp Y  &kp U    &kp I     &kp O    &kp P    &kp MINUS
&kp LSHFT &kp A  &kp S     &kp D    &kp F    &kp G                       &kp H  &kp J    &kp K     &kp L    &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X     &kp C    &kp V    &kp B  &kp C_MUTE &kp LG(L) &kp N  &kp M    &kp COMMA &kp DOT  &kp FSLH &kp BSLH
                 &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp SPACE  &kp RET   &mo 2  &kp BSPC &kp RALT  &kp RGUI
            >;

            sensor-bindings =
                <&mkp_encoder>,   // Left  encoder
                <&mouse_scroll>;  // Right encoder
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |  0    |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |  "|"  |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       | SPEC |  DEL  |       |      |
            bindings = <
&trans     &kp F1           &kp F2            &kp F3            &kp F4       &kp F5                       &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
&trans     &kp N1           &kp N2            &kp N3            &kp N4       &kp N5                       &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp PIPE
&trans     &kp EQUAL        &kp MINUS         &kp PLUS          &kp LBRC     &kp RBRC  &trans   &trans    &kp LBKT  &kp RBKT  &kp SEMI  &kp COLON &kp BSLH  &trans
                            &trans            &trans            &trans       &trans    &trans   &trans    &mo 3     &kp DEL   &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP >, // Left  encoder
                <&inc_dec_kp UP       DOWN>;      // Right encoder
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |      |      |      |      |                   |      |       |       |        |       |       |
// |       | INS | PRNT |  APP | XXXX | XXXX |                   | PG_UP|C(LEFT)|   UP  |C(RIGHT)|C(BSPC)|  BSPC |
// |       |LALT | LCTRL| LSHFT| XXXX | CAPS |                   | PG_DN|  LEFT |  DOWN | RIGHT  |  DEL  |  BSPC |
// |       | C(Z)| C(X) | C(C) | C(V) | XXXX |        |  |       | XXXX |  HOME |  XXXX | END    |  XXXX |       |
//               |      |      |      | SPEC |        |  |       |      |  DEL  |       |        |
            bindings = <
&trans  &trans    &trans     &trans     &trans    &trans                       &trans      &trans       &trans    &trans        &trans       &trans
&trans  &kp INS   &kp PSCRN  &kp K_APP  &none     &none                        &kp PG_UP   &kp LC(LEFT) &kp UP    &kp LC(RIGHT) &kp LC(BSPC) &kp BSPC
&trans  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp CAPS                     &kp PG_DN   &kp LEFT     &kp DOWN  &kp RIGHT     &kp DEL      &kp BSPC
&trans  &kp LC(Z) &kp LC(X)  &kp LC(C)  &kp LC(V) &none     &trans   &trans    &none       &kp HOME     &none     &kp END       &none        &trans
                  &trans     &trans     &trans    &mo 3     &trans   &trans    &trans      &kp DEL      &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP >, // Left  encoder
                <&inc_dec_kp UP       DOWN>;      // Right encoder
        };

        special_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   | XXXX | XXXX     | XXXX     | XXXX     |  XXXX |  XXXX |
// | XXXX  | XXXX|XXXX | XXXX | XXXX | XXXX |                   | XXXX | M_BACK   |  XXXX    | M_FWD    |  XXXX |  XXXX |
// | XXXX  | XXXX|XXXX | XXXX | XXXX | XXXX |                   | XXXX | C_PREV   | C_PLYPS  | C_NEXT   |  XXXX |  XXXX |
// | XXXX  | XXXX|XXXX | XXXX | XXXX | XXXX |        |  |       | XXXX | C_VOL_DN | C_MUTE   | C_VOL_UP |  XXXX |  XXXX |
//               |     |      |      |      |        |  |       |      |          |          |          |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &none    &none        &none       &none         &none     &none
&none      &none            &none             &none             &none        &none                        &none    &mkp MB4     &none       &mkp MB5      &none     &none
&none      &none            &none             &none             &none        &none                        &none    &kp C_PREV   &kp C_PP    &kp C_NEXT    &none     &none
&none      &none            &none             &none             &none        &none     &trans   &trans    &none    &kp C_VOL_DN &kp C_MUTE  &kp C_VOL_UP  &none     &none
                            &trans            &trans            &trans       &trans    &trans   &trans    &trans   &trans       &trans      &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP >, // Left  encoder
                <&inc_dec_kp UP       DOWN>;      // Right encoder
        };
    };
};
